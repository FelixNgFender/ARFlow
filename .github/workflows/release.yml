name: Release

on:
  release:
    types:
      - published

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    name: Release package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Python
        id: install_python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.8.3"

      - name: Setup a local virtual environment (if no poetry.toml file)
        working-directory: ./python
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - name: Restore cached virtualenv
        uses: actions/cache/restore@v4
        with:
          path: ./python/.venv
          key: venv-${{ runner.os }}-${{ steps.install_python.outputs.python-version }}-${{ hashFiles('./python/poetry.lock') }}

      - name: Install dependencies (skipped if cache hit, fallback to install)
        working-directory: ./python
        run: |
          poetry install
          echo "$(poetry env info --path)/bin" >> $GITHUB_PATH
          echo "VIRTUAL_ENV=$(poetry env info --path)/bin" >> $GITHUB_ENV

      - name: Saved cached virtualenv
        uses: actions/cache/save@v4
        with:
          path: ./python/.venv
          key: venv-${{ runner.os }}-${{ steps.install_python.outputs.python-version }}-${{ hashFiles('./python/poetry.lock') }}

      - name: Use PyPI API token
        working-directory: ./python
        run: poetry config pypi-token.pypi ${{ secrets.PYPI_API_TOKEN }}

      - name: Build and publish the package
        working-directory: ./python
        run: poetry publish --build

      - name: Upload Python package to GitHub
        uses: actions/upload-artifact@v4
        with:
          path: ./python/dist/
          if-no-files-found: error

  unity-release:
    name: Release unity package
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # Cache
      - name: Cache
        uses: actions/cache@v4
        with:
          path: Library
          key: Library
          restore-keys: Library-

      # Build
      - name: Build .unitypackage
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        uses: game-ci/unity-builder@v4
        with:
          projectPath: ./unity
          unityVersion: auto
          buildMethod: ExportPackageExample.Editor.UnityPackageExporter.Export # Path to the export method containing the namespace.

      # Upload
      - name: Upload .unitypackage
        uses: actions/upload-artifact@v2
        with:
          name: Unity Package
          path: ./unity/Build

  publish-docs:
    name: Publish documentation
    permissions:
      pages: write
      id-token: write
    uses: ./.github/workflows/publish-docs.yml
