syntax = "proto3";

option csharp_namespace = "ARFlow";

package arflow;

// The ARFlow service definition.
service ARFlow {
    // Registers a client with the given specifications.
    //
    // The client is registered with the server and is assigned a unique identifier.
    // The client can then send data frames to the server using the assigned identifier.
    rpc RegisterClient(ClientConfiguration) returns (ClientIdentifier);

    // Accepts a data frame from a client, returning an acknowledgment.
    rpc ProcessFrame(DataFrame) returns (Acknowledgement);
}

message ClientConfiguration {
    // TODO: Add documentation for each field, units of measurement, etc.
    string device_name = 1;

    message CameraIntrinsics {
        float focal_length_x = 1;
        float focal_length_y = 2;

        float principal_point_x = 3;
        float principal_point_y = 4;

        int32 resolution_x = 5;
        int32 resolution_y = 6;
    }
    CameraIntrinsics camera_intrinsics = 2;

    message CameraColor {
        bool enabled = 1;

        string data_type = 2;
        float resize_factor_x = 3;
        float resize_factor_y = 4;
    }
    CameraColor camera_color = 3;

    message CameraDepth {
        bool enabled = 1;

        string data_type = 2;
        int32 confidence_filtering_level = 3;

        int32 resolution_x = 4;
        int32 resolution_y = 5;
    }
    CameraDepth camera_depth = 4;

    message CameraTransform {
        bool enabled = 1;
    }
    CameraTransform camera_transform = 5;

    message CameraPointCloud {
        bool enabled = 1;
        float depth_upscale_factor = 2;
    }
    CameraPointCloud camera_point_cloud = 6;
}

message ClientIdentifier {
    string uid = 1;
}

message DataFrame {
    string uid = 1;
    bytes color = 2;
    bytes depth = 3;
    bytes transform = 4;
}

message Acknowledgement {
    string message = 1;
}
